networks:
  php-docker:
    name: php-docker

services:
  app:
    build:
      context: ./dockerfiles
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - php
      # - redis
      - mysql
      - phpmyadmin
      # - mailhog
    networks:
      - php-docker

  mysql:
    image: mysql:8.0
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: php_docker
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./mysql:/var/lib/mysql
    networks:
      - php-docker

  php:
    build:
      context: ./dockerfiles
      dockerfile: php.root.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "9000:9000"
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - php-docker

  # redis:
  #   image: redis:alpine
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - php-docker

  composer:
    build:
      context: ./dockerfiles
      dockerfile: php.root.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./src:/var/www/html
    depends_on:
      - php
    entrypoint: [ 'composer' ]
    networks:
      - php-docker

  # mailhog:
  #   image: mailhog/mailhog:latest
  #   ports:
  #     - "1025:1025"
  #     - "8025:8025"
  #   networks:
  #     - php-docker

  phpmyadmin:
    image: 'phpmyadmin:latest'
    restart: always
    ports:
      - '${PHPMYADMIN_PORT:-8080}:80'
    networks:
      - php-docker
    environment:
      - PMA_ARBITRARY=1
